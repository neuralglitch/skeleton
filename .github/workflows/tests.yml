name: Tests

on:
  push:
    branches: [ main, main-6.4, main-7.3, main-7.4, main-8.0, develop ]
  pull_request:
    branches: [ main, main-6.4, main-7.3, main-7.4, main-8.0, develop ]

jobs:
  tests:
    name: PHP ${{ matrix.php }} - Symfony ${{ matrix.symfony }}
    runs-on: ubuntu-latest
    
    strategy:
      fail-fast: false
      matrix:
        php: ['8.2', '8.3', '8.4']
        symfony: ['7.3.*']
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite
          coverage: none
          tools: composer:v2
      
      - name: Get Composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT
      
      - name: Cache Composer dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-php${{ matrix.php }}-symfony${{ matrix.symfony }}-${{ hashFiles('**/composer.json') }}
          restore-keys: |
            ${{ runner.os }}-php${{ matrix.php }}-symfony${{ matrix.symfony }}-
            ${{ runner.os }}-php${{ matrix.php }}-
      
      - name: Install dependencies
        run: |
          composer require "symfony/framework-bundle:${{ matrix.symfony }}" --no-interaction --no-update
          composer update --prefer-dist --no-interaction --no-progress
      
      - name: Create .env for tests
        run: |
          cat > .env.test.local << 'EOF'
          APP_ENV=test
          APP_DEBUG=0
          APP_SECRET=test-secret-for-ci
          DEFAULT_URI=http://localhost
          EOF
      
      - name: Run PHPUnit tests
        run: vendor/bin/phpunit --testdox
      
      - name: Report success
        if: success()
        run: echo "✅ All tests passed for PHP ${{ matrix.php }} with Symfony ${{ matrix.symfony }}"
  
  coverage:
    name: Code Coverage
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite
          coverage: xdebug
          tools: composer:v2
      
      - name: Get Composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT
      
      - name: Cache Composer dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-
      
      - name: Install dependencies
        run: composer install --prefer-dist --no-interaction --no-progress
      
      - name: Create .env for tests
        run: |
          cat > .env.test.local << 'EOF'
          APP_ENV=test
          APP_DEBUG=0
          APP_SECRET=test-secret-for-ci
          DEFAULT_URI=http://localhost
          EOF
      
      - name: Run tests with coverage
        run: vendor/bin/phpunit --coverage-text --coverage-clover=coverage.xml
      
      - name: Check coverage
        run: |
          COVERAGE=$(php -r "
            \$xml = simplexml_load_file('coverage.xml');
            \$metrics = \$xml->project->metrics;
            \$covered = (int)\$metrics['coveredstatements'];
            \$total = (int)\$metrics['statements'];
            \$percentage = \$total > 0 ? round((\$covered / \$total) * 100, 2) : 0;
            echo \$percentage;
          ")
          echo "📊 Code Coverage: ${COVERAGE}%"
          
          if (( \$(echo "\$COVERAGE < 80" | bc -l) )); then
            echo "⚠️ WARNING: Coverage is below 80% (${COVERAGE}%)"
          else
            echo "✅ Coverage goal met (${COVERAGE}%)"
          fi
      
      - name: Upload coverage reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage.xml
          retention-days: 30

