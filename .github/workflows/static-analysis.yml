name: Static Analysis

on:
  push:
    branches: [ main, main-6.4, main-7.3, main-7.4, main-8.0, develop ]
  pull_request:
    branches: [ main, main-6.4, main-7.3, main-7.4, main-8.0, develop ]

jobs:
  phpstan:
    name: PHPStan (Level 6)
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: mbstring, xml, ctype, iconv, intl
          coverage: none
          tools: composer:v2
      
      - name: Get Composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT
      
      - name: Cache Composer dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-
      
      - name: Install dependencies
        run: composer install --prefer-dist --no-interaction --no-progress
      
      - name: Run PHPStan
        run: vendor/bin/phpstan analyze --no-progress --error-format=github
      
      - name: Report success
        if: success()
        run: echo "✅ PHPStan analysis passed (Level 6)"
  
  composer-validate:
    name: Validate Composer
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          coverage: none
          tools: composer:v2
      
      - name: Validate composer.json
        run: composer validate --strict --no-check-lock
      
      - name: Report success
        if: success()
        run: echo "✅ composer.json is valid"
  
  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: mbstring, xml, ctype, iconv, intl
          coverage: none
          tools: composer:v2
      
      - name: Get Composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT
      
      - name: Cache Composer dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-
      
      - name: Install dependencies
        run: composer install --prefer-dist --no-interaction --no-progress
      
      - name: Check for security vulnerabilities
        run: |
          composer audit --format=plain || {
            echo "⚠️ Security vulnerabilities detected!"
            echo "Run 'composer audit' locally for details"
            exit 1
          }
      
      - name: Report success
        if: success()
        run: echo "✅ No known security vulnerabilities detected"
  
  lint-yaml:
    name: Lint YAML Files
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          coverage: none
          tools: composer:v2
      
      - name: Get Composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT
      
      - name: Cache Composer dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-
      
      - name: Install dependencies
        run: composer install --prefer-dist --no-interaction --no-progress
      
      - name: Lint YAML files
        run: |
          php bin/console lint:yaml config/ --parse-tags
          php bin/console lint:yaml importmap.php || true
      
      - name: Report success
        if: success()
        run: echo "✅ All YAML files are valid"
  
  lint-twig:
    name: Lint Twig Templates
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: mbstring, xml, ctype, iconv, intl
          coverage: none
          tools: composer:v2
      
      - name: Get Composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT
      
      - name: Cache Composer dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-
      
      - name: Install dependencies
        run: composer install --prefer-dist --no-interaction --no-progress
      
      - name: Create .env for linting
        run: |
          cat > .env << 'EOF'
          APP_ENV=dev
          APP_DEBUG=1
          APP_SECRET=lint-secret
          DEFAULT_URI=http://localhost
          EOF
      
      - name: Lint Twig templates
        run: php bin/console lint:twig templates/
      
      - name: Report success
        if: success()
        run: echo "✅ All Twig templates are valid"

